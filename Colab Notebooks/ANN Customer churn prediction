{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"ANN Customer churn prediction","provenance":[],"collapsed_sections":[],"mount_file_id":"1RrPNlnBSOoBh3JSFq3dRGtmeD6nkjatr","authorship_tag":"ABX9TyOhXBSnZpvhRORcqpYXrU9e"},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU"},"cells":[{"cell_type":"code","metadata":{"id":"o3qe5rdMuBJZ"},"source":["import time\r\n","import numpy as np\r\n","import pandas as pd\r\n","import seaborn as sns\r\n","import random\r\n","import math\r\n","import sys\r\n","import copy\r\n","import matplotlib.pyplot as plt \r\n","%matplotlib inline\r\n","from sklearn.preprocessing import LabelEncoder \r\n","from sklearn.model_selection import train_test_split\r\n","import warnings\r\n","warnings.filterwarnings('ignore') \r\n","from zipfile import ZipFile \r\n","import tensorflow as tf\r\n","from tensorflow import keras\r\n","import sklearn\r\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":649},"id":"e91qwukkuHfZ","executionInfo":{"status":"ok","timestamp":1610882213169,"user_tz":-330,"elapsed":2242,"user":{"displayName":"vikas sao","photoUrl":"","userId":"08189896451819436987"}},"outputId":"68e5a8f3-ac2d-4741-b3ed-2bb2cc3c80ff"},"source":["data = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Telco-Customer-Churn.csv')\r\n","data.drop(['customerID'] ,axis=1,inplace =True)\r\n","df = data\r\n","le =LabelEncoder()\r\n","\r\n","\r\n","# for col in data.columns:\r\n","#   if data[col].dtype=='float64':\r\n","#     continue\r\n","#   if data[col].dtype=='int64':\r\n","#     data[col] = data[col].astype(float)\r\n","#     continue\r\n","#   if data[col].unique().all==['Male' ,'Female']:\r\n","#     data[col]  = le.fit_transform(data[col])\r\n","#   if data[col].unique().all==['Female' ,'Male']:\r\n","#     data[col]  = le.fit_transform(data[col])\r\n","#   if data[col].unique().all==['Yes' ,'No']:\r\n","#     data[col]  = le.fit_transform(data[col])\r\n","#   if data[col].unique().all==['No' ,'Yes']:\r\n","#     data[col]  = le.fit_transform(data[col])\r\n","#   if data[col].dtype=='int64':\r\n","#     data[col] = data[col].astype(float)\r\n","#     continue\r\n"," \r\n","#   if len(data[col].unique())==2 and data[col].dtype=='object':\r\n","#     data[col]  = le.fit_transform(data[col])\r\n","#   if len(data[col].unique())==3 and data[col].dtype=='object':\r\n","#     data = pd.get_dummies(data = data , columns=[col])  \r\n","  \r\n","# data['TotalCharges'] =data['TotalCharges'].fillna(str(data['TotalCharges'].mode()))\r\n","# # data['TotalCharges'] = pd.to_numeric(data['TotalCharges'])\r\n","# # data['TotalCharges'] = data['TotalCharges'].astype('float64')\r\n","\r\n","# print(data['TotalCharges'].iloc[488])\r\n","\r\n","\r\n","\r\n","\r\n","# data['MultipleLines'].replace(['No phone service','No','Yes'] ,['0','1','2'] , inplace=True)\r\n","# data['InternetService'].replace(['No','DSL','Fiber optic'] ,['0','1','2'] , inplace=True)\r\n","# data['Contract'].replace(['One year','Two year','Month-to-month'] ,['0','1','2'] , inplace=True)\r\n","# data['PaymentMethod'].replace(['Electronic check','Mailed check','Bank transfer (automatic)' ,'Credit card (automatic)'] ,['0','1','2','3'] , inplace=True)\r\n","\r\n","\r\n","# c =['gender', 'Partner' ,'Dependents' , 'PhoneService' , 'OnlineSecurity' ,'OnlineBackup' , 'DeviceProtection' , 'TechSupport' , 'StreamingTV', 'StreamingMovies'\r\n","#     , 'PaperlessBilling' ]\r\n","# for x in c: \r\n","#   data[x] = le.fit_transform(data[x])\r\n","#   data[x] = data[x].fillna(data[x].mean())\r\n","\r\n","# for col in data.columns:\r\n","#   data[col].notnull() = pd.to_numeric(data[col].notnull(), downcast='float')\r\n","  # data[col] = data[col].astype('float32')\r\n","  # if data[col].dtype=='object':\r\n","\r\n","  #   data.drop([col] , axis=1,inplace =True)\r\n","  #   print(col)\r\n","  # x =data[col]\r\n","  # print(x)\r\n"," \r\n","\r\n","print(data.dtypes)\r\n","data.head()"],"execution_count":null,"outputs":[{"output_type":"stream","text":["gender               object\n","SeniorCitizen         int64\n","Partner              object\n","Dependents           object\n","tenure                int64\n","PhoneService         object\n","MultipleLines        object\n","InternetService      object\n","OnlineSecurity       object\n","OnlineBackup         object\n","DeviceProtection     object\n","TechSupport          object\n","StreamingTV          object\n","StreamingMovies      object\n","Contract             object\n","PaperlessBilling     object\n","PaymentMethod        object\n","MonthlyCharges      float64\n","TotalCharges         object\n","Churn                object\n","dtype: object\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>gender</th>\n","      <th>SeniorCitizen</th>\n","      <th>Partner</th>\n","      <th>Dependents</th>\n","      <th>tenure</th>\n","      <th>PhoneService</th>\n","      <th>MultipleLines</th>\n","      <th>InternetService</th>\n","      <th>OnlineSecurity</th>\n","      <th>OnlineBackup</th>\n","      <th>DeviceProtection</th>\n","      <th>TechSupport</th>\n","      <th>StreamingTV</th>\n","      <th>StreamingMovies</th>\n","      <th>Contract</th>\n","      <th>PaperlessBilling</th>\n","      <th>PaymentMethod</th>\n","      <th>MonthlyCharges</th>\n","      <th>TotalCharges</th>\n","      <th>Churn</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Female</td>\n","      <td>0</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>1</td>\n","      <td>No</td>\n","      <td>No phone service</td>\n","      <td>DSL</td>\n","      <td>No</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>Month-to-month</td>\n","      <td>Yes</td>\n","      <td>Electronic check</td>\n","      <td>29.85</td>\n","      <td>29.85</td>\n","      <td>No</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>34</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>DSL</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>One year</td>\n","      <td>No</td>\n","      <td>Mailed check</td>\n","      <td>56.95</td>\n","      <td>1889.5</td>\n","      <td>No</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>2</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>DSL</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>Month-to-month</td>\n","      <td>Yes</td>\n","      <td>Mailed check</td>\n","      <td>53.85</td>\n","      <td>108.15</td>\n","      <td>Yes</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>45</td>\n","      <td>No</td>\n","      <td>No phone service</td>\n","      <td>DSL</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>One year</td>\n","      <td>No</td>\n","      <td>Bank transfer (automatic)</td>\n","      <td>42.30</td>\n","      <td>1840.75</td>\n","      <td>No</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Female</td>\n","      <td>0</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>2</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>Fiber optic</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>Month-to-month</td>\n","      <td>Yes</td>\n","      <td>Electronic check</td>\n","      <td>70.70</td>\n","      <td>151.65</td>\n","      <td>Yes</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   gender  SeniorCitizen Partner  ... MonthlyCharges  TotalCharges Churn\n","0  Female              0     Yes  ...          29.85         29.85    No\n","1    Male              0      No  ...          56.95        1889.5    No\n","2    Male              0      No  ...          53.85        108.15   Yes\n","3    Male              0      No  ...          42.30       1840.75    No\n","4  Female              0      No  ...          70.70        151.65   Yes\n","\n","[5 rows x 20 columns]"]},"metadata":{"tags":[]},"execution_count":133}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JY_sOsyDD3uT","executionInfo":{"status":"ok","timestamp":1610882213174,"user_tz":-330,"elapsed":2228,"user":{"displayName":"vikas sao","photoUrl":"","userId":"08189896451819436987"}},"outputId":"3967d03f-1587-4b0a-eda5-374e50d862f2"},"source":["\r\n","df1 = df[df.TotalCharges!=' ']\r\n","df1.shape"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(7032, 20)"]},"metadata":{"tags":[]},"execution_count":134}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":312},"id":"6_6ebTA9DJ7_","executionInfo":{"status":"ok","timestamp":1610882213178,"user_tz":-330,"elapsed":2215,"user":{"displayName":"vikas sao","photoUrl":"","userId":"08189896451819436987"}},"outputId":"fb8d5adf-4fee-4940-f55b-60b6e0ca5cc5"},"source":["\r\n","tenure_churn_no = df1[df1.Churn=='No'].tenure\r\n","tenure_churn_yes = df1[df1.Churn=='Yes'].tenure\r\n","\r\n","plt.xlabel(\"tenure\")\r\n","plt.ylabel(\"Number Of Customers\")\r\n","plt.title(\"Customer Churn Prediction Visualiztion\")\r\n","\r\n","blood_sugar_men = [113, 85, 90, 150, 149, 88, 93, 115, 135, 80, 77, 82, 129]\r\n","blood_sugar_women = [67, 98, 89, 120, 133, 150, 84, 69, 89, 79, 120, 112, 100]\r\n","\r\n","plt.hist([tenure_churn_yes, tenure_churn_no], rwidth=0.95, color=['green','red'],label=['Churn=Yes','Churn=No'])\r\n","plt.legend()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.legend.Legend at 0x7f19751a0828>"]},"metadata":{"tags":[]},"execution_count":135},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":312},"id":"cKBB9foKDSou","executionInfo":{"status":"ok","timestamp":1610882213181,"user_tz":-330,"elapsed":2203,"user":{"displayName":"vikas sao","photoUrl":"","userId":"08189896451819436987"}},"outputId":"50d47bc0-9680-4202-8697-e0667a3e430a"},"source":["mc_churn_no = df1[df1.Churn=='No'].MonthlyCharges      \r\n","mc_churn_yes = df1[df1.Churn=='Yes'].MonthlyCharges      \r\n","\r\n","plt.xlabel(\"Monthly Charges\")\r\n","plt.ylabel(\"Number Of Customers\")\r\n","plt.title(\"Customer Churn Prediction Visualiztion\")\r\n","\r\n","blood_sugar_men = [113, 85, 90, 150, 149, 88, 93, 115, 135, 80, 77, 82, 129]\r\n","blood_sugar_women = [67, 98, 89, 120, 133, 150, 84, 69, 89, 79, 120, 112, 100]\r\n","\r\n","plt.hist([mc_churn_yes, mc_churn_no], rwidth=0.95, color=['green','red'],label=['Churn=Yes','Churn=No'])\r\n","plt.legend()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.legend.Legend at 0x7f19749b2f28>"]},"metadata":{"tags":[]},"execution_count":136},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"OfuvXAvWDTWL"},"source":["def print_unique_col_values(df):\r\n","       for column in df:\r\n","            if df[column].dtypes=='object':\r\n","                print(f'{column}: {df[column].unique()}')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"pmKeRJAXDVqj"},"source":["df1.replace('No internet service','No',inplace=True)\r\n","df1.replace('No phone service','No',inplace=True)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"H-o9NSUuDZjB","executionInfo":{"status":"ok","timestamp":1610882213190,"user_tz":-330,"elapsed":2183,"user":{"displayName":"vikas sao","photoUrl":"","userId":"08189896451819436987"}},"outputId":"91c7fc60-8cd0-4728-8dbc-ec3ff4048a09"},"source":["print_unique_col_values(df1)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["gender: ['Female' 'Male']\n","Partner: ['Yes' 'No']\n","Dependents: ['No' 'Yes']\n","PhoneService: ['No' 'Yes']\n","MultipleLines: ['No' 'Yes']\n","InternetService: ['DSL' 'Fiber optic' 'No']\n","OnlineSecurity: ['No' 'Yes']\n","OnlineBackup: ['Yes' 'No']\n","DeviceProtection: ['No' 'Yes']\n","TechSupport: ['No' 'Yes']\n","StreamingTV: ['No' 'Yes']\n","StreamingMovies: ['No' 'Yes']\n","Contract: ['Month-to-month' 'One year' 'Two year']\n","PaperlessBilling: ['Yes' 'No']\n","PaymentMethod: ['Electronic check' 'Mailed check' 'Bank transfer (automatic)'\n"," 'Credit card (automatic)']\n","TotalCharges: ['29.85' '1889.5' '108.15' ... '346.45' '306.6' '6844.5']\n","Churn: ['No' 'Yes']\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"rgPYoK5SDcWX"},"source":["\r\n","yes_no_columns = ['Partner','Dependents','PhoneService','MultipleLines','OnlineSecurity','OnlineBackup',\r\n","                  'DeviceProtection','TechSupport','StreamingTV','StreamingMovies','PaperlessBilling','Churn']\r\n","for col in yes_no_columns:\r\n","    df1[col].replace({'Yes': 1,'No': 0},inplace=True)\r\n","    "],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vo-_Q0NLDeq2","executionInfo":{"status":"ok","timestamp":1610882213668,"user_tz":-330,"elapsed":2641,"user":{"displayName":"vikas sao","photoUrl":"","userId":"08189896451819436987"}},"outputId":"b4ac3a0f-1227-4e81-ec31-89fdd43e065d"},"source":["for col in df1:\r\n","    print(f'{col}: {df1[col].unique()}')"],"execution_count":null,"outputs":[{"output_type":"stream","text":["gender: ['Female' 'Male']\n","SeniorCitizen: [0 1]\n","Partner: [1 0]\n","Dependents: [0 1]\n","tenure: [ 1 34  2 45  8 22 10 28 62 13 16 58 49 25 69 52 71 21 12 30 47 72 17 27\n","  5 46 11 70 63 43 15 60 18 66  9  3 31 50 64 56  7 42 35 48 29 65 38 68\n"," 32 55 37 36 41  6  4 33 67 23 57 61 14 20 53 40 59 24 44 19 54 51 26 39]\n","PhoneService: [0 1]\n","MultipleLines: [0 1]\n","InternetService: ['DSL' 'Fiber optic' 'No']\n","OnlineSecurity: [0 1]\n","OnlineBackup: [1 0]\n","DeviceProtection: [0 1]\n","TechSupport: [0 1]\n","StreamingTV: [0 1]\n","StreamingMovies: [0 1]\n","Contract: ['Month-to-month' 'One year' 'Two year']\n","PaperlessBilling: [1 0]\n","PaymentMethod: ['Electronic check' 'Mailed check' 'Bank transfer (automatic)'\n"," 'Credit card (automatic)']\n","MonthlyCharges: [29.85 56.95 53.85 ... 63.1  44.2  78.7 ]\n","TotalCharges: ['29.85' '1889.5' '108.15' ... '346.45' '306.6' '6844.5']\n","Churn: [0 1]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"tL_z4ZFHDgv8"},"source":["df1['gender'].replace({'Female':1,'Male':0},inplace=True)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VlL_buZyDiYg","executionInfo":{"status":"ok","timestamp":1610882213670,"user_tz":-330,"elapsed":2620,"user":{"displayName":"vikas sao","photoUrl":"","userId":"08189896451819436987"}},"outputId":"dd08a6e6-4c5d-41a9-8175-d35160beab2d"},"source":["\r\n","df2 = pd.get_dummies(data=df1, columns=['InternetService','Contract','PaymentMethod'])\r\n","df2.columns"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['gender', 'SeniorCitizen', 'Partner', 'Dependents', 'tenure',\n","       'PhoneService', 'MultipleLines', 'OnlineSecurity', 'OnlineBackup',\n","       'DeviceProtection', 'TechSupport', 'StreamingTV', 'StreamingMovies',\n","       'PaperlessBilling', 'MonthlyCharges', 'TotalCharges', 'Churn',\n","       'InternetService_DSL', 'InternetService_Fiber optic',\n","       'InternetService_No', 'Contract_Month-to-month', 'Contract_One year',\n","       'Contract_Two year', 'PaymentMethod_Bank transfer (automatic)',\n","       'PaymentMethod_Credit card (automatic)',\n","       'PaymentMethod_Electronic check', 'PaymentMethod_Mailed check'],\n","      dtype='object')"]},"metadata":{"tags":[]},"execution_count":143}]},{"cell_type":"code","metadata":{"id":"2VLzA_LADi4F"},"source":["cols_to_scale = ['tenure','MonthlyCharges','TotalCharges']\r\n","\r\n","from sklearn.preprocessing import MinMaxScaler\r\n","scaler = MinMaxScaler()\r\n","df2[cols_to_scale] = scaler.fit_transform(df2[cols_to_scale])\r\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":275},"id":"7KIn4uf8DlYY","executionInfo":{"status":"ok","timestamp":1610882245508,"user_tz":-330,"elapsed":1155,"user":{"displayName":"vikas sao","photoUrl":"","userId":"08189896451819436987"}},"outputId":"a71bc20e-5167-44d4-8b96-1395edc024c5"},"source":["data = df2\r\n","print(data.shape)\r\n","data.head()"],"execution_count":null,"outputs":[{"output_type":"stream","text":["(7032, 27)\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>gender</th>\n","      <th>SeniorCitizen</th>\n","      <th>Partner</th>\n","      <th>Dependents</th>\n","      <th>tenure</th>\n","      <th>PhoneService</th>\n","      <th>MultipleLines</th>\n","      <th>OnlineSecurity</th>\n","      <th>OnlineBackup</th>\n","      <th>DeviceProtection</th>\n","      <th>TechSupport</th>\n","      <th>StreamingTV</th>\n","      <th>StreamingMovies</th>\n","      <th>PaperlessBilling</th>\n","      <th>MonthlyCharges</th>\n","      <th>TotalCharges</th>\n","      <th>Churn</th>\n","      <th>InternetService_DSL</th>\n","      <th>InternetService_Fiber optic</th>\n","      <th>InternetService_No</th>\n","      <th>Contract_Month-to-month</th>\n","      <th>Contract_One year</th>\n","      <th>Contract_Two year</th>\n","      <th>PaymentMethod_Bank transfer (automatic)</th>\n","      <th>PaymentMethod_Credit card (automatic)</th>\n","      <th>PaymentMethod_Electronic check</th>\n","      <th>PaymentMethod_Mailed check</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0.000000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0.115423</td>\n","      <td>0.001275</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.464789</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.385075</td>\n","      <td>0.215867</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.014085</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0.354229</td>\n","      <td>0.010310</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.619718</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.239303</td>\n","      <td>0.210241</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.014085</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0.521891</td>\n","      <td>0.015330</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   gender  ...  PaymentMethod_Mailed check\n","0       1  ...                           0\n","1       0  ...                           1\n","2       0  ...                           1\n","3       0  ...                           0\n","4       1  ...                           0\n","\n","[5 rows x 27 columns]"]},"metadata":{"tags":[]},"execution_count":146}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":258},"id":"CFG_qZGnERiY","executionInfo":{"status":"ok","timestamp":1610882693237,"user_tz":-330,"elapsed":1073,"user":{"displayName":"vikas sao","photoUrl":"","userId":"08189896451819436987"}},"outputId":"1dd0b884-ef15-48cb-e13f-8cf91635a84f"},"source":["X = data.drop(['Churn'] ,axis=1 )\r\n","Y=data['Churn']\r\n","\r\n","X_train  ,  X_test   , Y_train , Y_test   = train_test_split(X,Y,test_size=0.2)\r\n","\r\n","X.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>gender</th>\n","      <th>SeniorCitizen</th>\n","      <th>Partner</th>\n","      <th>Dependents</th>\n","      <th>tenure</th>\n","      <th>PhoneService</th>\n","      <th>MultipleLines</th>\n","      <th>OnlineSecurity</th>\n","      <th>OnlineBackup</th>\n","      <th>DeviceProtection</th>\n","      <th>TechSupport</th>\n","      <th>StreamingTV</th>\n","      <th>StreamingMovies</th>\n","      <th>PaperlessBilling</th>\n","      <th>MonthlyCharges</th>\n","      <th>TotalCharges</th>\n","      <th>InternetService_DSL</th>\n","      <th>InternetService_Fiber optic</th>\n","      <th>InternetService_No</th>\n","      <th>Contract_Month-to-month</th>\n","      <th>Contract_One year</th>\n","      <th>Contract_Two year</th>\n","      <th>PaymentMethod_Bank transfer (automatic)</th>\n","      <th>PaymentMethod_Credit card (automatic)</th>\n","      <th>PaymentMethod_Electronic check</th>\n","      <th>PaymentMethod_Mailed check</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0.000000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0.115423</td>\n","      <td>0.001275</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.464789</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.385075</td>\n","      <td>0.215867</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.014085</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0.354229</td>\n","      <td>0.010310</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.619718</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.239303</td>\n","      <td>0.210241</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.014085</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0.521891</td>\n","      <td>0.015330</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   gender  ...  PaymentMethod_Mailed check\n","0       1  ...                           0\n","1       0  ...                           1\n","2       0  ...                           1\n","3       0  ...                           0\n","4       1  ...                           0\n","\n","[5 rows x 26 columns]"]},"metadata":{"tags":[]},"execution_count":159}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DHx6S4WOEs1A","executionInfo":{"status":"ok","timestamp":1610888113814,"user_tz":-330,"elapsed":1418,"user":{"displayName":"vikas sao","photoUrl":"","userId":"08189896451819436987"}},"outputId":"b36748e2-73ac-4725-97ef-3f6661884dcc"},"source":["model  = keras.Sequential([\r\n","        keras.layers.Dense(200 ,input_shape=(len(X_train.columns) ,) ,activation='relu'),\r\n","        keras.layers.Dense(100,activation='relu'),\r\n","        keras.layers.Dense(50 ,activation='relu'),\r\n","        keras.layers.Dense(1 ,activation='sigmoid')\r\n","])\r\n","model.compile(\r\n","    optimizer='adam' ,\r\n","    loss ='binary_crossentropy' ,\r\n","    metrics =['accuracy']\r\n",")\r\n","print(len(X_train.columns))"],"execution_count":219,"outputs":[{"output_type":"stream","text":["26\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xqo8qvbQFeQg","executionInfo":{"status":"ok","timestamp":1610888116415,"user_tz":-330,"elapsed":3992,"user":{"displayName":"vikas sao","photoUrl":"","userId":"08189896451819436987"}},"outputId":"56a29e24-9cf5-40ff-edf4-580d70dc6685"},"source":["model.fit(X_train , Y_train , epochs =5)"],"execution_count":220,"outputs":[{"output_type":"stream","text":["Epoch 1/5\n","176/176 [==============================] - 1s 2ms/step - loss: 0.5002 - accuracy: 0.7364\n","Epoch 2/5\n","176/176 [==============================] - 0s 3ms/step - loss: 0.4260 - accuracy: 0.7975\n","Epoch 3/5\n","176/176 [==============================] - 0s 2ms/step - loss: 0.4083 - accuracy: 0.8101\n","Epoch 4/5\n","176/176 [==============================] - 0s 2ms/step - loss: 0.3946 - accuracy: 0.8156\n","Epoch 5/5\n","176/176 [==============================] - 0s 2ms/step - loss: 0.4052 - accuracy: 0.8141\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["<tensorflow.python.keras.callbacks.History at 0x7f18f9d8d588>"]},"metadata":{"tags":[]},"execution_count":220}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HNTyA0WxF_z5","executionInfo":{"status":"ok","timestamp":1610888116418,"user_tz":-330,"elapsed":3981,"user":{"displayName":"vikas sao","photoUrl":"","userId":"08189896451819436987"}},"outputId":"668d3afe-b1b9-4720-97a7-659d8d9353bd"},"source":["\r\n","predict = model.predict(X_test )\r\n","for i in range(len(predict)):\r\n","  if(predict[i]<=.5):\r\n","    predict[i] =0\r\n","  else:\r\n","    predict[i] =1\r\n","print(predict[0:10])\r\n","print(Y_test[0:10])\r\n"],"execution_count":221,"outputs":[{"output_type":"stream","text":["[[0.]\n"," [1.]\n"," [0.]\n"," [0.]\n"," [0.]\n"," [0.]\n"," [0.]\n"," [0.]\n"," [1.]\n"," [0.]]\n","5162    0\n","4900    1\n","1940    0\n","6905    0\n","3607    0\n","3082    0\n","5734    0\n","3366    0\n","3822    0\n","3959    0\n","Name: Churn, dtype: int64\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"0BJfDjqYLWEP","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1610888116420,"user_tz":-330,"elapsed":3975,"user":{"displayName":"vikas sao","photoUrl":"","userId":"08189896451819436987"}},"outputId":"d6fd3fe1-3fe8-4692-ca5b-c56123312884"},"source":["#evaluation\r\n","from sklearn.metrics import accuracy_score , confusion_matrix, classification_report\r\n","l =100000\r\n","# print(accuracy_score(Y_test[0:10], predict[0:10]))\r\n","cm = confusion_matrix(Y_test ,predict )\r\n","print(classification_report(Y_test , predict))\r\n"],"execution_count":222,"outputs":[{"output_type":"stream","text":["              precision    recall  f1-score   support\n","\n","           0       0.81      0.92      0.86      1019\n","           1       0.68      0.44      0.53       388\n","\n","    accuracy                           0.79      1407\n","   macro avg       0.75      0.68      0.70      1407\n","weighted avg       0.78      0.79      0.77      1407\n","\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":296},"id":"lt8W6f-xUqrc","executionInfo":{"status":"ok","timestamp":1610888116988,"user_tz":-330,"elapsed":4534,"user":{"displayName":"vikas sao","photoUrl":"","userId":"08189896451819436987"}},"outputId":"f9076c44-5970-4ccd-a626-acd3ba3b06c9"},"source":["sns.heatmap(cm , annot = True , fmt ='d')\r\n","plt.xlabel('truth')\r\n","plt.ylabel('predicted')"],"execution_count":223,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(33.0, 0.5, 'predicted')"]},"metadata":{"tags":[]},"execution_count":223},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 2 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hrNOygVnYxrg","executionInfo":{"status":"ok","timestamp":1610888116990,"user_tz":-330,"elapsed":4528,"user":{"displayName":"vikas sao","photoUrl":"","userId":"08189896451819436987"}},"outputId":"57505379-54ea-4c2f-9b9c-8e9e22686cb8"},"source":["for layer in model.layers:\r\n","    weights = layer.get_weights() # list of numpy arrays\r\n","    print(len(weights[0]))"],"execution_count":224,"outputs":[{"output_type":"stream","text":["26\n","200\n","100\n","50\n"],"name":"stdout"}]}]}